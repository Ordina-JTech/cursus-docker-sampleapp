buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        // spring-boot
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE"

        // docker
        classpath "com.bmuschko:gradle-docker-plugin:2.3"
    }
}

apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'spring-boot'


apply from: "${rootDir}/gradle/version.gradle"
apply from: "${rootDir}/gradle/publish.gradle"
apply from: "${rootDir}/gradle/dependencies.gradle"
apply from: "${rootDir}/gradle/sonar.gradle"
apply from: "${rootDir}/gradle/ittest.gradle"

repositories {
    mavenLocal()
    //maven { url "${repo_url}" }
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile libraries.springboot

    compile libraries.tools,          
            libraries.swagger

    testCompile libraries.test
}

mainClassName = 'mario.Application'
//
//processResources {
//    filesMatching("**/*.gradle") {
//        expand(project.properties)
//    }
//}

test {
    // Ignore failures is set to true to make differences between a failing and unstable build.
    ignoreFailures = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}


// DOCKER

task copyDockerfiles(type: Copy) {
    from 'build/libs'
    from 'src/main/resources/docker'
    into 'build/docker'
    rename { String fileName ->
        fileName.replace("-$version","")
    }
}

apply plugin: 'com.bmuschko.docker-remote-api'
docker {
    //url = 'http://dockerhost:2375'
    url = 'unix:///var/run/docker.sock'
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
task buildImage(type: DockerBuildImage) {
    dependsOn copyDockerfiles
    inputDir = project.file('build/docker')
    tag = "$project.group/$project.name"
}